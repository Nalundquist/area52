// <auto-generated />
using Area52.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Area52.Migrations
{
    [DbContext(typeof(Area52Context))]
    [Migration("20221012233436_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Area52.Models.Alien", b =>
                {
                    b.Property<int>("AlienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AlienName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("AlienId");

                    b.ToTable("Aliens");
                });

            modelBuilder.Entity("Area52.Models.AlienPlanet", b =>
                {
                    b.Property<int>("AlienPlanetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlienId")
                        .HasColumnType("int");

                    b.Property<int>("PlanetId")
                        .HasColumnType("int");

                    b.HasKey("AlienPlanetId");

                    b.HasIndex("AlienId");

                    b.HasIndex("PlanetId");

                    b.ToTable("AlienPlanet");
                });

            modelBuilder.Entity("Area52.Models.AlienSpecii", b =>
                {
                    b.Property<int>("AlienSpeciiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlienId")
                        .HasColumnType("int");

                    b.Property<int>("SpeciiId")
                        .HasColumnType("int");

                    b.HasKey("AlienSpeciiId");

                    b.HasIndex("AlienId");

                    b.HasIndex("SpeciiId");

                    b.ToTable("AlienSpecii");
                });

            modelBuilder.Entity("Area52.Models.Planet", b =>
                {
                    b.Property<int>("PlanetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Atmosphere")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PlanetName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("PlanetId");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("Area52.Models.PlanetSpecii", b =>
                {
                    b.Property<int>("PlanetSpeciiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PlanetId")
                        .HasColumnType("int");

                    b.Property<int>("SpeciiId")
                        .HasColumnType("int");

                    b.HasKey("PlanetSpeciiId");

                    b.HasIndex("PlanetId");

                    b.HasIndex("SpeciiId");

                    b.ToTable("PlanetSpecii");
                });

            modelBuilder.Entity("Area52.Models.Specii", b =>
                {
                    b.Property<int>("SpeciiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SpeciiName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SpeciiId");

                    b.ToTable("Species");
                });

            modelBuilder.Entity("Area52.Models.AlienPlanet", b =>
                {
                    b.HasOne("Area52.Models.Alien", "Alien")
                        .WithMany("JoinEntPlan")
                        .HasForeignKey("AlienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Area52.Models.Planet", "Planet")
                        .WithMany("JoinEntPlan")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alien");

                    b.Navigation("Planet");
                });

            modelBuilder.Entity("Area52.Models.AlienSpecii", b =>
                {
                    b.HasOne("Area52.Models.Alien", "Alien")
                        .WithMany("JoinEntSpec")
                        .HasForeignKey("AlienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Area52.Models.Specii", "Specii")
                        .WithMany("JoinEntSpec")
                        .HasForeignKey("SpeciiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alien");

                    b.Navigation("Specii");
                });

            modelBuilder.Entity("Area52.Models.PlanetSpecii", b =>
                {
                    b.HasOne("Area52.Models.Planet", "Planet")
                        .WithMany("JoinPlanSpec")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Area52.Models.Specii", "Specii")
                        .WithMany("JoinPlanSpec")
                        .HasForeignKey("SpeciiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planet");

                    b.Navigation("Specii");
                });

            modelBuilder.Entity("Area52.Models.Alien", b =>
                {
                    b.Navigation("JoinEntPlan");

                    b.Navigation("JoinEntSpec");
                });

            modelBuilder.Entity("Area52.Models.Planet", b =>
                {
                    b.Navigation("JoinEntPlan");

                    b.Navigation("JoinPlanSpec");
                });

            modelBuilder.Entity("Area52.Models.Specii", b =>
                {
                    b.Navigation("JoinEntSpec");

                    b.Navigation("JoinPlanSpec");
                });
#pragma warning restore 612, 618
        }
    }
}
